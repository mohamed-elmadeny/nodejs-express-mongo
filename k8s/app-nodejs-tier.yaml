
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  labels:
      tier: app
      service: node
data:
  MONGODB_URI: mongodb://mongodb:27017/node_db
  NODE_ENV: production
  SECRET: c494aab3-af14-4797-86cc-78a2307e999f

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: node
    tier: app
  name: node
spec:
  replicas: 1
  selector:
    matchLabels:
      service: node
      tier: app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: node
        tier: app
    spec:
# wait for the DB  Service to run first.
      initContainers:
      - name: init-wait-db
        image: alpine
        command: ["/bin/sh", "-c", "for i in $(seq 1 300); do nc -zvw1 mongodb 27017 && exit 0 || sleep 3; done; exit 1"]
      containers:
        - image: mohamedmadany/node-express:latest 
          name: node
          ports:
            - containerPort: 3000
          volumeMounts:
            - mountPath: /nodejs
              name: nodejs
          envFrom:
            - configMapRef:
                name: app-config   
      volumes:
        - name: nodejs
          persistentVolumeClaim:
            claimName: nodejs
---
apiVersion: v1
kind: Service
metadata:
  labels:
    tier: app
    service: node
  name: node
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 3000
  selector:
      service: node

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    service: nodejs
  name: nodejs
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
